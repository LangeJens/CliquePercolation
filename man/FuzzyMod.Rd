% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FuzzyMod.R
\name{FuzzyMod}
\alias{FuzzyMod}
\title{Fuzzy Modularity of a community structure of a graph}
\usage{
FuzzyMod(graph, membership, abs = TRUE)
}
\arguments{
\item{graph}{The input graph.}

\item{membership}{Numeric vector or list indicating the membership structure.}

\item{abs}{Should fuzzy modularity be calculated based on absolute values of 
network edges? Default is TRUE.}
}
\value{
A numeric scalar, the fuzzy modularity score of the given configuration.
}
\description{
Function calculates the fuzzy modularity of a (disjoint or non-disjoint division)
of a graph into subgraphs.
}
\details{
The modularity of a graph with respect to some division is a measure of how good 
the division is. The traditional \emph{modularity} Q was proposed by Newman and Girvan (2004):

\deqn{Q=\frac{1}{2m} \sum_{c\epsilon_C} \sum_{u,v\epsilon_V} (A_{uv}-\frac{k_{u}k_{v}}{2m}) \delta_{cu} \delta_{cv}}

where m is the total number of edges, C is the set of communities corresponding to a partition,
V is the set of vertices (i.e. nodes) in the network, \eqn{A_{uv}} is the element of the 
A adjacency matrix in row \eqn{i} and column \eqn{j}, and \eqn{k_{u}} and \eqn{k_{v}} are the node 
degrees of nodes \eqn{u} and \eqn{v}, respectively. \eqn{\delta_{cu}} indicates whether 
node \eqn{u} belongs to community \eqn{c}, which equals 1 if u and v belongs to 
community c and 0 otherwise. The product \eqn{\delta_{cu}*\delta_{cv}} is a Kronecker delta function
which equals 1 if \eqn{u} and \eqn{v} belongs to community \eqn{c} and 0 otherwise.

In the case of \emph{weighted} networks, Fan, Li, Zhang, Wu, and Di (2007) proposed that to calculate 
\emph{modularity} Q, m should be the total edge weights, and \eqn{k_{u}} and \eqn{k_{v}} should be 
the node strengths of nodes \eqn{u} and \eqn{v}, respectively. 

One limitation of \emph{modularity} Q proposed by Newman and Girvan (2004) was that modularity could 
not be calculated for non-disjoint community partitions (i.e. networks in which a node is assigned
to more than one community). As such, Chen, Shang, Lv, and Fu (2010) proposed a generalisation 
in terms of fuzzy modularity:

\deqn{Q=\frac{1}{2m} \sum_{c\epsilon_C} \sum_{u,v\epsilon_V} \alpha_{cu} \alpha_{cv} (A_{uv}-\frac{k_{u}k_{v}}{2m})}
 
where \eqn{\alpha_{cu}} is the \emph{belonging coefficient}. The \emph{belonging coefficient} reflects 
how much the node \eqn{u} belongs to community \eqn{c}. The belonging coefficient is calculated as:

\deqn{\alpha_{cu} = \frac{k_{cu}}{\sum_{c\epsilon_C}k_{cu}}}

In case of a disjoint solution, the fuzzy modularity Q proposed by Chen, Shang, Lv, and Fu (2010) reduces to the 
modularity Q proposed by Newman and Girvan (2004).
}
\examples{
g <- igraph::disjoint_union(igraph::make_full_graph(5),igraph::make_full_graph(4))
g <- igraph::add_edges(g, c(2,6, 2,7, 2,8, 2,9))
wc <- list(c(1,2,3,4,5),c(2,6,7,8,9))
FuzzyMod(graph=g, membership=wc, abs=TRUE)

}
\references{
Newman, M. E., & Girvan, M. (2004). Finding and evaluating community structure in networks. 
\emph{Physical review E}, 69(2), 026113. 

Fan, Y., Li, M., Zhang, P., Wu, J., & Di, Z. (2007). Accuracy and precision of methods for community 
identification in weighted networks. \emph{Physica A: Statistical Mechanics and its Applications}, 377(1), 363-372. 

Chen, D., Shang, M., Lv, Z., & Fu, Y. (2010). Detecting overlapping communities of weighted networks 
via a local algorithm. \emph{Physica A: Statistical Mechanics and its Applications}, 389(19), 4177-4187.
}
\author{
Pedro Henrique Ribeiro Santiago, \email{pedro.ribeirosantiago@adelaide.edu.au} [ctb]

Gustavo Hermes Soares, \email{gustavo.soares@adelaide.edu.au} [rev]

Adrian Quintero, \email{adrianquintero987@hotmail.com} [rev]

Lisa Jamieson, \email{lisa.jamieson@adelaide.edu.au} [rev]
}
